name: React and Spring Boot CI/CD (Simple)

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run Java Linting without Maven Config
        run: |
          wget https://github.com/checkstyle/checkstyle/releases/download/checkstyle-10.15.0/checkstyle-10.15.0-all.jar
          java -jar checkstyle-10.15.0-all.jar -c /google_checks.xml backend/task-manager/src/main/java
      
      # - name: Run Spring Boot SCA
      #   working-directory: backend/task-manager
      #   run: |
      #     mvn org.owasp:dependency-check-maven:check || true     # it is downloading a database vulnerbility data for dependency.
      
      - name: Run Spring Boot SAST with Snyk
        uses: snyk/actions/maven@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --all-projects
        continue-on-error: true       #need a token, scans code
      
      - name: Build Spring Boot Backend
        working-directory: backend/task-manager
        run: |
          mvn clean package -DskipTests
            
      # - name: Run Spring Boot Unit Tests
      #   working-directory: backend/task-manager
      #   run: mvn test
      
      - name: Build and Push Backend Docker Image
        run: |
          docker build -t akshat1414/spring-boot-task:latest backend/task-manager
          docker push akshat1414/spring-boot-task:latest
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/frontend-k8s/package-lock.json

      - name: Run React Linting
        working-directory: frontend/frontend-k8s
        run: |
          npm install
          npm run lint || true # This ensures the step always succeeds
          
      - name: Run React SAST with Snyk
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --all-projects
        continue-on-error: true         #need a token - limited
      
      - name: Build React Frontend
        working-directory: frontend/frontend-k8s
        run: |
          npm install
          npm run build

      - name: Build and Push Frontend Docker Image
        run: |
          docker build -t akshat1414/task-manager-frontend:latest frontend/frontend-k8s
          docker push akshat1414/task-manager-frontend:latest
          
  deploy:
    runs-on: self-hosted
    needs: build-and-push
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Update Kubernetes Deployments
        run: |
          sudo KUBECONFIG=/etc/kubernetes/admin.conf kubectl set image deployment/backend-deployment backend=akshat1414/spring-boot-task:latest
          sudo KUBECONFIG=/etc/kubernetes/admin.conf kubectl set image deployment/frontend-deployment frontend=akshat1414/task-manager-frontend:latest


  dast-scan:
    runs-on: self-hosted
    needs: deploy
    permissions:
      issues: write
      contents: read
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Docker login
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Pre-pull ZAP Docker image
      run: docker pull ghcr.io/zaproxy/zaproxy:stable

    - name: Run OWASP ZAP Full Scan
      uses: zaproxy/action-full-scan@v0.5.0
      continue-on-error: true
      with:
        target: ${{ secrets.TARGET_URL }}
        docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
        artifact_name: zap-scan-report 

      
