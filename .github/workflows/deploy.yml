name: React and Spring Boot CI/CD

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    # Use a GitHub-hosted runner for building and pushing images
    runs-on: ubuntu-latest
    
    outputs:
      backend_image_tag: ${{ steps.push_backend.outputs.image_tag }}
      frontend_image_tag: ${{ steps.push_frontend.outputs.image_tag }}
      
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          path: .  # Explicitly check out code to the root of the workspace

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build Spring Boot Backend
        working-directory: backend/task-manager
        run: |
          mvn clean package -DskipTests

      - name: Build and Push Backend Docker Image
        id: push_backend
        working-directory: backend/task-manager
        run: |
          # Use a unique tag based on the Git commit SHA
          IMAGE_TAG="akshat1414/spring-boot-task:${{ github.sha }}"
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Build React Frontend
        working-directory: frontend/frontened-k8s
        run: |
          npm install
          npm run build

      - name: Build and Push Frontend Docker Image
        id: push_frontend
        working-directory: frontend/frontened-k8s
        run: |
          # Use a unique tag based on the Git commit SHA
          IMAGE_TAG="akshat1414/task-manager-frontend:${{ github.sha }}"
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
          
  deploy:
    # Use the self-hosted runner for deployment
    runs-on: akshat-runner
    
    needs: build-and-push
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          path: . # Explicitly check out code to the root of the workspace

      - name: Update Kubernetes Deployments
        run: |
          # Use kubectl to update the image tags for both deployments
          BACKEND_IMAGE=${{ needs.build-and-push.outputs.backend_image_tag }}
          FRONTEND_IMAGE=${{ needs.build-and-push.outputs.frontend_image_tag }}
          
          kubectl set image deployment/spring-backend-deployment spring-backend=$BACKEND_IMAGE
          kubectl set image deployment/react-frontend-deployment react-frontend=$FRONTEND_IMAGE
